{"version":3,"sources":["scripts/main.js"],"names":["personArray","document","querySelector","namesColumnArray","getNumberFromString","value","result","Number","replace","sortList","columnN","children","sort","a","b","innerText","nextValue","isNaN","localeCompare","forEach","person","append","addEventListener","e","targetArr","querySelectorAll","count","column","target"],"mappings":";AAAA,aA4BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1BA,IAAMA,EAAcC,SAASC,cAAc,SACrCC,EAAmBF,SAASC,cAAc,SAEhD,SAASE,EAAoBC,GAKpBC,OAJQC,OACbF,EAAMG,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAMzC,SAASC,EAASC,GACO,EAAIV,EAAYW,UAAUC,KAAK,SAACC,EAAGC,GAClDT,IAAAA,EAAQQ,EAAEF,SAASD,GAASK,UAC5BC,EAAYF,EAAEH,SAASD,GAASK,UAElC,OAACE,MAAMb,EAAoBC,IAIxBA,EAAMa,cAAcF,GAHlBZ,EAAoBC,GAASD,EAAoBY,KAM7CG,QAAQ,SAAAC,GAAUpB,OAAAA,EAAYqB,OAAOD,KAGtDjB,EAAiBmB,iBAAiB,QAAS,SAACC,GACpCC,IAAAA,EAAYrB,EAAiBsB,iBAAiB,MAChDC,EAAQ,EAERF,EAAAA,GAAWL,QAAQ,SAAAQ,GACjBA,IAAWJ,EAAEK,QACfnB,EAASiB,GAGXA","file":"main.908e43f6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst personArray = document.querySelector('tbody');\nconst namesColumnArray = document.querySelector('thead');\n\nfunction getNumberFromString(value) {\n  const result = Number(\n    value.replace(/,/g, '').replace('$', '')\n  );\n\n  return result;\n}\n\nfunction sortList(columnN) {\n  const newPersonArray = [...personArray.children].sort((a, b) => {\n    const value = a.children[columnN].innerText;\n    const nextValue = b.children[columnN].innerText;\n\n    if (!isNaN(getNumberFromString(value))) {\n      return getNumberFromString(value) - getNumberFromString(nextValue);\n    }\n\n    return value.localeCompare(nextValue);\n  });\n\n  newPersonArray.forEach(person => personArray.append(person));\n}\n\nnamesColumnArray.addEventListener('click', (e) => {\n  const targetArr = namesColumnArray.querySelectorAll('th');\n  let count = 0;\n\n  [...targetArr].forEach(column => {\n    if (column === e.target) {\n      sortList(count);\n    }\n\n    count++;\n  });\n});\n"]}